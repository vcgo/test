package main

import (
	"fmt"
	"net"
	"strconv"

	"github.com/vcgo/kit"
)

func main() {
	ips := [...]string{
		"10.50.13.1",
		"10.90.4.37",
		"10.80.128.137",
		"10.32.25.98",
		"10.21.6.28",
		"10.32.26.46",
		"10.21.6.64",
		"10.80.132.186",
		"10.50.13.13",
		"10.90.2.86",
		"10.50.13.31",
		"10.32.26.30",
		"10.90.3.67",
		"10.80.129.136",
		"10.90.13.15",
		"10.90.2.65",
		"10.50.13.25",
		"10.90.13.18",
		"10.90.2.90",
		"10.50.13.19",
		"10.21.7.46",
		"10.21.6.98",
		"10.90.2.72",
		"10.90.2.171",
		"10.21.6.65",
		"10.80.134.180",
		"10.80.128.139",
		"10.90.13.54",
		"10.50.13.7",
		"10.80.134.193",
		"10.90.13.40",
		"10.32.26.29",
		"10.32.25.100",
		"10.90.1.142",
		"10.90.4.38",
		"10.80.128.191",
		"10.21.6.70",
		"10.90.13.14",
		"10.80.130.197",
		"10.32.26.49",
		"10.21.6.40",
		"10.90.1.143",
		"10.90.2.76",
		"10.90.2.68",
		"10.32.22.90",
		"10.80.132.192",
		"10.90.13.16",
		"10.90.13.39",
		"10.50.13.201",
		"10.90.3.97",
		"10.80.128.197",
		"10.80.135.136",
		"10.32.25.66",
		"10.90.13.55",
		"10.90.13.25",
		"10.21.6.38",
		"10.90.8.13",
		"10.32.26.83",
		"10.90.8.11",
		"10.90.13.26",
		"10.50.13.37",
		"10.80.128.148",
		"10.21.6.11",
		"10.80.133.194",
		"10.90.8.15",
		"10.80.129.191",
		"10.90.13.27",
		"10.90.13.13",
		"10.90.2.135",
		"10.90.7.21",
		"10.32.22.97",
		"10.32.22.105",
		"10.21.6.39",
		"10.80.131.136",
		"10.90.13.53",
		"10.21.7.47",
		"10.80.132.187",
		"10.80.130.180",
		"10.80.134.184",
		"10.90.8.14",
		"10.80.135.194",
		"10.32.22.91",
		"10.90.2.138",
		"10.80.135.190",
		"10.80.133.156",
		"10.21.6.41",
		"10.80.133.136",
		"10.80.135.184",
		"10.21.6.36",
		"10.21.6.102",
		"10.21.6.37",
		"10.90.13.17",
		"10.90.2.78",
		"10.90.2.136",
		"10.90.3.111",
		"10.90.2.83",
		"10.32.25.101",
		"10.90.13.41",
		"10.80.134.187",
		"10.90.1.32",
		"10.90.1.33",
		"10.90.9.136",
		"10.80.128.134",
		"10.80.130.134",
		"10.80.132.134",
		"10.80.134.134",
		"10.80.133.137",
		"10.80.135.206",
		"10.80.128.153",
		"10.80.131.153",
		"10.80.133.153",
		"10.80.131.140",
		"10.90.8.35",
		"10.90.8.36",
		"10.90.8.37",
		"10.90.8.38",
		"10.80.134.196",
		"10.90.9.101",
		"10.90.9.102",
		"10.80.133.186",
		"10.89.1.134",
		"10.89.2.131",
		"10.89.2.145",
		"10.89.2.132",
		"10.89.2.135",
		"10.89.2.149",
		"10.89.2.136",
		"10.89.2.150",
		"10.89.2.142",
		"10.80.133.185",
		"10.80.129.156",
		"10.90.32.43",
		"10.80.129.145",
		"10.90.7.132",
		"10.90.7.133",
		"10.90.7.134",
		"10.90.7.131",
		"10.90.35.19",
		"10.90.32.39",
		"10.90.32.40",
		"10.90.32.41",
		"10.90.32.42",
	}
	for i := range ips {
		ip := ips[i]
		go testMem(ip)
	}
	kit.Sleep(999 * 99)
}

func test() {
	for ip1 := 50; ip1 < 100; ip1++ {
		for ip2 := 0; ip2 < 256; ip2++ {
			for ip3 := 0; ip3 < 256; ip3++ {
				ip := "47." + strconv.Itoa(ip1) + "." + strconv.Itoa(ip2) + "." + strconv.Itoa(ip3)
				go testMem(ip)
			}
		}
	}
}

func testMem(ip string) {
	conn, err := net.ListenUDP("udp", &net.UDPAddr{IP: net.ParseIP(ip), Port: 11211})
	if err == nil {
		fmt.Println("success", ip)
		conn.Close()
	} else {
		fmt.Println("error", ip, err)
	}
}
